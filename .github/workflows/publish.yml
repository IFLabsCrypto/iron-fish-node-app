name: Publish Release
permissions:
  contents: write
on: push
concurrency: publish-release

jobs:
  check_release:
    name: Cancel release if run on an already published release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get NPM package version
        id: package-version
        run: |
          CURRENTVERSION=$(jq .version package.json -r)
          echo $CURRENTVERSION
          echo current-version=$CURRENTVERSION >> "$GITHUB_OUTPUT"

      - name: Get release status
        id: release-status
        run: |
          gh release view ${{ env.VERSION }} --json isDraft --jq .isDraft &> isdraft.txt || true
          cat isdraft.txt
          echo is-draft=$(cat isdraft.txt) >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ github.token }}
          VERSION: v${{ steps.package-version.outputs.current-version }}

      - name: Fail if release exists and is not a draft
        if: ${{ steps.release-status.outputs.is-draft != 'true' && steps.release-status.outputs.is-draft != 'release not found' }}
        run: |
          echo "::error::Ran Publish Release on an already published release"
          exit 1

  publish_on_linux:
    name: Linux x64
    needs: [delete_existing_artifacts]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install
      - name: Build and publish release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release
